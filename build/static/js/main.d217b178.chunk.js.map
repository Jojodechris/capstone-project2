{"version":3,"sources":["HomeNav.js","Header.js","Message.js","CreateReview.js","Review.js","BookDetails.js","Search.js","appContext.js","Bookcard.js","Booklist.js","Books.js","footer.js","Home.js","LogsignNav.js","LogsignHeader.js","SignupForm.js","LoginForm.js","FavoriteBookCard.js","Favorites.js","MostLikedCard.js","MostLiked.js","Logout.js","Notfound.js","UpdateProfile.js","App.js","reportWebVitals.js","index.js"],"names":["HomeNav","args","isOpen","setIsOpen","useState","isShowAboutInfo","setIsShowAboutInfo","React","createElement","Navbar","expand","Nav","className","navbar","NavbarBrand","href","NavbarToggler","onClick","toggle","Collapse","NavLink","exact","to","class","Header","Message","bookProverbs","proverb","author","authorImage","randomProverb","getRandomProverb","randomIndex","Math","floor","random","length","CreateReview","_ref","id","reviews","setReviews","newReview","setNewReview","rating","content","showReviews","setShowReviews","useEffect","fetchreviews","async","allreviews","fetch","concat","method","headers","credentials","ok","Error","status","data","json","console","log","error","handleInputChange","e","name","value","target","prevReview","parseInt","map","review","key","username","onSubmit","preventDefault","response","body","JSON","stringify","bookId","handleSubmit","htmlFor","type","placeholder","onChange","min","max","Axios","defaults","withCredentials","BookDetails","book","setBook","useParams","isLoading","setIsLoading","isReviewing","setIsReviewing","setRating","userReview","setUserReview","text","then","res","catch","err","volumeInfo","authors","publisher","title","imageLinks","description","src","smallThumbnail","alt","window","location","Search","Component","render","this","props","search","action","handleSearch","defaultValue","handleSort","AppContext","createContext","AppContextProvider","children","favorites","setFavorites","Provider","addToFavorites","newFavorites","removeFromFavorites","filter","Bookcard","navigate","useNavigate","thumbnailSrc","Booklist","books","useAppContext","context","useContext","undefined","heartStates","setHeartStates","favorited","setFavorited","favorite","book_id","fetchFavorited","i","includes","isFavorite","localStorage","getItem","toggleHeartClass","Books","setBooks","searchValue","setSearchValue","sort","setSort","Promise","resolve","setTimeout","fetchData","searchBook","useCallback","items","Array","isArray","a","b","publishedDate","substring","Footer","Home","setName","get","valid","Example","NavItem","handleAboutClick","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","divider","NavbarText","LogsignHeader","SignupForm","formData","setFormData","password","signupStatus","setSignupStatus","isInvalid","setIsInvalid","handleChange","post","message","alert","autoComplete","Link","LoginForm","setUsername","setPassword","loginError","setLoginError","success","setItem","user","FavoriteBookCard","Favorites","fetchFavorites","MostLikedCard","MostLiked","mostLiked","setMostLiked","fetchMostFavorites","liked","Logout","NotFound","UpdateProfileForm","updateStatus","setUpdateStatus","put","App","BrowserRouter","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","StrictMode"],"mappings":"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","file":"static/js/main.d217b178.chunk.js","sourcesContent":["import \"./login.css\";\nimport \"./NavBar.css\";\nimport { NavLink } from \"react-router-dom\";\nimport React, { useState } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavbarText,\n} from 'reactstrap';\n\n\nfunction HomeNav(args) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [isShowAboutInfo, setIsShowAboutInfo] = useState(false); // State for showing info\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  const handleAboutClick = () => {\n    setIsShowAboutInfo(!isShowAboutInfo); // Toggle info display on click\n  };\n\n\n    return (\n      <div>\n        <Navbar>\n        <Navbar expand=\"md\">\n        <Nav className=\"me-auto\" navbar>\n          <NavbarBrand href=\"/\">Right BOOK 4 you app </NavbarBrand>\n          </Nav>\n          </Navbar>\n          <NavbarToggler onClick={toggle} />\n          <Collapse isOpen={isOpen} navbar>\n          <Navbar expand=\"md\">\n          <Nav className=\"me-auto\" navbar>\n             <NavLink exact to=\"/profile\" className=\"side\">\n                Profile\n                </NavLink>\n             <NavLink exact to=\"/likedbooks\" className=\"side\">\n                Most liked books\n                </NavLink>\n                <NavLink exact to=\"/\" className=\"side\">\n                Home <i className=\"bi bi-house\"></i>\n                </NavLink>\n                <NavLink exact to=\"/favorites\" className=\"side\">\n                Favorite Books\n                </NavLink>\n                <NavLink exact to=\"/logout\" className=\"side\">\n                log out\n                </NavLink>\n             </Nav>\n        \n             {/* <NavbarBrand href=\"/\">right book app</NavbarBrand> */}\n             <NavbarBrand href=\"/\"><i class=\"bi bi-journal-bookmark-fill\"></i>\n        <i class=\"bi bi-journal-richtext\"></i></NavbarBrand>\n        </Navbar>\n        \n          </Collapse>\n        </Navbar>\n        \n      </div>\n    );\n  }\n  \n  export default HomeNav;","import React from \"react\";\n// import \"bootstrap-icons/font/bootstrap-icons.css\";\nimport NavBar from \"./NavBar\";\nimport HomeNav from \"./HomeNav\";\n\n\n\nconst Header = () => {\n  return (\n    <header>\n         {/* <NavBar /> */}\n  \n      <HomeNav />\n    </header>\n  );\n};\nexport default Header;\n","import React from \"react\";\n\nfunction Message() {\n\n\n\n  // Array of proverbs about books\n  const bookProverbs = [\n    {\n      proverb: \"The man who does not read good books has no advantage over the man who can't read them.\",\n      author: \"Mark Twain\",\n      authorImage: \"https://hips.hearstapps.com/hmg-prod/images/gettyimages-517320104.jpg?crop=0.558xw:0.991xh;0.145xw,0.00920xh&resize=640:*\",\n    },\n    {\n      proverb: \"Reading is a discount ticket to everywhere.\",\n      author: \"Mary Schmich\",\n      authorImage: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQxRbl3gFwBVIGKT3IM1rYgi1ovHcancJ7ha47X3uLgPz3RIJQL4l2I8Piqm7eRplUmCgU&usqp=CAU\",\n    },\n    {\n      proverb: \"Books are a uniquely portable magic.\",\n      author: \"Stephen King\",\n      authorImage: \"https://cdn.britannica.com/20/217720-050-857D712B/American-novelist-Stephen-King-2004.jpg\",\n    },\n    {\n      proverb: \"Books are the mirrors of the soul.\",\n      author: \"Virginia Woolf\",\n      authorImage: \"https://cdn.britannica.com/82/138382-050-2E8FCB26/Virginia-Woolf.jpg\",\n    },\n    {\n      proverb: \"There is no friend as loyal as a book.\",\n      author: \"Ernest Hemingway\",\n      authorImage: \"https://www.conchtourtrain.com/wp-content/uploads/2023/04/ernest-hemingway-writing.jpg\",\n    },\n    {\n      proverb: \"A book is like a garden carried in the pocket.\",\n      author: \"Chinese Proverb\",\n      authorImage: \"image_address_of_chinese_proverb.jpg\",\n    },\n    {\n      proverb: \"Books are the plane, and the train, and the road. They are the destination, and the journey. They are home.\",\n      author: \"Anna Quindlen\",\n      authorImage: \"https://annaquindlen.com/wp-content/uploads/2021/04/DSC6411-1024x1280-1-e1619452353475.jpg\",\n    },\n    {\n      proverb: \"The world is a book, and those who do not travel read only one page.\",\n      author: \"Saint Augustine\",\n      authorImage: \"https://res.cloudinary.com/diyyvqvpa/image/upload/f_auto,q_auto/v1/saint-coleman-website/augustine\",\n    },\n    {\n      proverb: \"To read without reflecting is like eating without digesting.\",\n      author: \"Edmund Burke\",\n      authorImage: \"image_address_of_burke.jpg\",\n    },\n    {\n      proverb: \"In the case of good books, the point is not how many of them you can get through, but rather how many can get through to you.\",\n      author: \"Mortimer J. Adler\",\n      authorImage: \"image_address_of_adler.jpg\",\n    },\n    // Add more proverbs with authors and their images\n  ];\n  \n\n  // Function to get a random proverb\n  const getRandomProverb = () => {\n    const randomIndex = Math.floor(Math.random() * bookProverbs.length);\n    return bookProverbs[randomIndex];\n  };\n\n  // If there are no books available, display a random proverb\n//   if (!books || books.length === 0) {\n    const randomProverb = getRandomProverb();\n    return (\n      <div className=\"random\">\n        <h2><i>{randomProverb.proverb}</i></h2> \n        <p>{randomProverb.author}</p>\n        {/* <img src={randomProverb.authorImage} alt={`${randomProverb.author}'s image`} /> */}\n        {/* Additional content for the welcome page */}\n      </div>\n    );\n  }\n\n  // If there are books available, return null (no message will be displayed)\n//   return null;\n// }\n\nexport default Message;","// front-end \n// CreateReview.js\n\n\nimport React, { useState,useEffect } from \"react\";\nimport axios from \"axios\";\nimport HomeNav from \"./HomeNav\";\nimport \"./App.css\";\n\n\nfunction CreateReview({id}) {\n  // console.log(\"createID\",id)\n//   const [rating, setRating] = useState(0);\nconst [reviews, setReviews] = useState([]);\nconst [newReview, setNewReview] = useState({ rating: 0, content: '' });\nconst [showReviews, setShowReviews] = useState(false);\n\n//   const handleRatingChanged = (value) => {\n//     setRating(value);\n//   };\n// useEffect(() => {\n\n//   // Fetch reviews from the server\n//   axios.get(`http://localhost:3001/reviews/${id}`)\n//     .then(response => setReviews(response.data))\n//     .catch(error => console.error('Error fetching reviews:', error));\n// }, []);\n\n\n\n\n\n  // const handleCommentChanged = (e) => {\n  //   setComment(e.target.value);\n\n  // };\n\n  useEffect(() => {\n    \n    fetchreviews() \n\n},[])\n\n  \n\n\n    const fetchreviews = async () => {\n      try {\n        const allreviews = await fetch(`http://localhost:3001/reviews/${id}`, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          credentials: \"include\",\n        });\n  \n        if (!allreviews.ok) {\n          throw new Error(`HTTP error! Status: ${allreviews.status}`);\n        }\n        const data = await allreviews.json();\n        console.log(\"data\",data);\n        setReviews(data.reviews);\n        // setReviews(data.reviews.map((review)=> (review.book_id) ) );\n      } catch (error) {\n        console.error(`Error! ${error}`);\n      }\n    };\n  \n  //   fetchreviews();\n  // }, []);\n//   const deleteReview = (id) => {\n//     // Filter reviews to exclude the one with the specified id\n//     setReviews(reviews.filter((item) => item.id !== id));\n//   };\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    // console.log(\"id\",id)\n    // console.log(\"submitted\")\n    try {\n      let response = await fetch(`http://localhost:3001/reviews/${id}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        credentials: \"include\",\n        body: JSON.stringify({ bookId: id, newReview }),\n      });\n      response=response.json()\n      console.log(response.body, \"responsebody\")\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      fetchreviews()\n      // console.log(\"submitted\")\n      // setReviews([...reviews, response.reviews]);\n      // console.log(\"reviews\",reviews)\n      // console.log(response, \"response\")\n\n      // console.log(response.reviews, \"responseReviews\")\n      setNewReview({ rating: 0, content: '' });\n    } catch (error) {\n      console.error(\"Error adding review:\", error);\n    }\n  };\n\n\n  // const handleInputChange = (e) => {\n  //   const { name, value } = e.target;\n  //   setNewReview({ ...newReview, [name]: name === 'rating' ? parseInt(value, 10) : value });\n  // };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setNewReview((prevReview) => ({\n      ...prevReview,\n      [name]: name === 'rating' ? parseInt(value, 10) : value,\n    }));\n  };\n\n  const handleSeeReviews = (e) => {\n    e.preventDefault()\n    setShowReviews(true);\n\n  };\n\n  return (\n    <div className=\"review-form\">\n      <HomeNav/>\n      <h1>Review Book</h1>\n      {showReviews && (\n        <ul>\n          {reviews.map((review) => (\n      \n            <li key={review}>\n              <strong>Rating:</strong> {review.rating} stars - review:{review.content} from  user: {review.username}\n            </li>\n          ))}\n        </ul>\n      )}\n      <form onSubmit={(e) => handleSubmit(e)}>\n        <label htmlFor=\"title\">rate this book on a scale of 1 to 5 :</label>\n        <input\n          type=\"number\"\n          name=\"rating\"\n          placeholder=\"Rating\"\n          value={newReview.rating}\n          onChange={handleInputChange}\n          min=\"1\"\n          max=\"5\"\n        />\n        <br/>\n        <label htmlFor=\"title\">review this book:</label>\n        <textarea\n          name=\"content\"\n          placeholder=\"Review Content\"\n          value={newReview.content}\n          onChange={handleInputChange}\n        />\n        <br/>\n        <button type=\"submit\">Add Review</button>\n      </form>\n      <button type=\"button\" onClick={handleSeeReviews}>\n        See reviews\n      </button>\n    </div>\n    \n  );\n}\n\nexport default CreateReview;\n","// Review.js\n\nimport Axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport EachReview from './EachReview';\nimport CreateReview from './CreateReview';\n\nAxios.defaults.withCredentials = true;\n\nconst Review = (comment) => {\n\n  // const deleteReview = (id) => {\n  //   // Filter reviews to exclude the one with the specified id\n  //   setReviews(reviews.filter((item) => item.id !== id));\n  // };\n\n  return (\n    <div>\n      {comment.length > 0 ? (\n        comment.map((item, index) => (\n          <EachReview\n            key={index}\n            review={item}\n\n            // handleDelete={() => deleteReview(item.id)}\n            \n          />\n        ))\n      ) : (\n        <p>No reviews yet</p>\n      )}\n    </div>\n  );\n}\n\nexport default Review;\n","// Bookdetails.js\nimport React, { useState, useEffect } from \"react\";\nimport Axios from 'axios';\nimport { useParams } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Message from \"./Message\";\nimport Review from \"./Review\";\nimport CreateReview from \"./CreateReview\";\n\n\n\n\nconst BookDetails = () => {\n  const [book, setBook] = useState({});\n  const { id } = useParams();\n  console.log(id,\"id\")\n\n  const [isLoading, setIsLoading] = useState(true)\n  const[isReviewing,setIsReviewing]=useState(false)\n  const[rating,setRating]=useState(0)\n  const [userReview, setUserReview] = useState({\n    text: '',\n    rating: 0,\n  });\n  \n\n\n\n\n  useEffect(() => {\n    setIsLoading(true)\n    fetch(`https://www.googleapis.com/books/v1/volumes/${id}`)\n      .then((res) => res.json())\n      .then((res)=>{\n      setBook(res);\n      setIsLoading(false)\n        console.log(res.data)\n      })\n      .catch((err) => console.log(err));\n  }, [id]);\n  console.log(\"idsss\",id)\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  if(isReviewing){\n    return(\n      // e.preventDefault(),\n      <div>\n    {/* <BookDetails/> */}\n    <div>\n    <CreateReview id={id}/>\n    {/* <textarea class=\"textBox largeTextBox reviewUserText js-reviewUserText\"\n    id=\"review_review_usertext\" maxlength=\"18800\" name=\"review[review]\" \n    placeholder=\"Enter your review (optional)\" \n    rows=\"12\"></textarea>\n    <br />\n    Rating:\n    <div class=\"star-rating\">\n    <input type=\"radio\" id=\"star1\" name=\"rating\" value=\"1\"></input>\n    <label for=\"star2\" onClick={() => setRating(1)}>☆</label>\n    <input type=\"radio\" id=\"star2\" name=\"rating\" value=\"2\"></input>\n    <label for=\"star2\" onClick={() => setRating(2)}>☆</label>\n    <input type=\"radio\" id=\"star3\" name=\"rating\" value=\"3\"></input>\n    <label for=\"star3\" onClick={() => setRating(3)}>☆</label>\n    <input type=\"radio\" id=\"star4\" name=\"rating\" value=\"4\"></input>\n    <label for=\"star4\" onClick={() => setRating(4)}>☆</label>\n    <input type=\"radio\" id=\"star5\" name=\"rating\" value=\"5\"></input>\n    <label for=\"star5\" onClick={() => setRating(5)}>☆</label>\n\n</div> */}\n    </div>\n    {/* <button onClick={()=><Review/>}> Submit Review </button> */}\n    </div>\n    \n    );\n  }\n\n\n\n  \n  \n\n  const { volumeInfo } = book;\n\n  if (!volumeInfo) {\n    return <Message/>\n  }\n\n  const authors = volumeInfo.authors || [];\n  const publisher = volumeInfo.publisher || '';\n  const title = volumeInfo.title || '';\n  const imageLinks = volumeInfo.imageLinks || {};\n  const description = volumeInfo.description || '';\n\n\n  return (\n    <div className=\"book-details\">\n      <Header/>\n      <img src={imageLinks.smallThumbnail} alt={title} />\n      <h3>{title}</h3>\n      <p>Author: {authors}</p>\n      <p>Publisher: {publisher}</p>\n      <h2>Description</h2>\n      <p>{description}</p>\n      {/* when the user clicks on order book guide him on Amazon website to order that book */}\n      <button onClick={() => window.location.href=`https://www.amazon.com/s?k=book+${title}`}>Order book</button>\n      <button onClick={()=>setIsReviewing(true)}>Review book</button> \n      {/* on click display an area and stars to rate the book*/}\n      \n    </div>\n\n  );\n};\n\nexport default BookDetails;\n","// Search.js\n\nimport React, { Component } from \"react\";\n\n\nclass Search extends Component {\n  render() {\n    return (\n      <div className=\"sideG\">\n        <form onSubmit={this.props.search} action=\"\">\n          <input\n            onChange={this.props.handleSearch}\n            type=\"text\"\n            name=\"search\"\n            placeholder=\"Search for a book...🔍\"\n          />\n          <button type=\"submit\">Search</button>\n          <select defaultValue=\"sort\" onChange={this.props.handleSort}>\n            <option value=\"sort\">Sort</option>\n            <option value=\"Newest\">Newest</option>\n            <option value=\"Oldest\">Oldest</option>\n           </select> \n        </form>\n      </div>\n    );\n  }\n}\n\n  export default Search;","// app\n\nimport React, {createContext,useContext,useState} from \"react\";\n\nconst AppContext=createContext(null);\n\nexport  const useAppContext = ()=>{\n    const context = useContext(AppContext);\n    \n    if(context===undefined){\n        throw new Error(\"useAppContext must be used within the AppProvider\")\n    }\n    return context;\n};\n\n// Provider Component\n\nconst AppContextProvider = ({children})=>{\n    const[favorites,setFavorites]=useState([]);\n\n\n    const addToFavorites =(book)=> {\n        const oldFavorites=[...favorites];\n        const newFavorites=oldFavorites.concat(book)\n        setFavorites(newFavorites);\n\n    }\n\n    const removeFromFavorites =(id)=>{\n        const oldFavorites=[...favorites];\n        const newFavorites= oldFavorites.filter((book)=> book.id!==id);\n        setFavorites(newFavorites);\n    }\n\n    return(\n        <AppContext.Provider value={{favorites,addToFavorites,removeFromFavorites}}>\n            {children}\n            </AppContext.Provider>  \n    )\n}\n\nexport default AppContextProvider;","// Bookcard.js\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\n\nconst Bookcard = ({ book }) => {\n\n  const navigate = useNavigate();\n  const { volumeInfo } = book;\n  const { id } = book;\n  const { title, authors, publisher, imageLinks} = volumeInfo;\n\n\n  const thumbnailSrc = imageLinks?.smallThumbnail || \"default_thumbnail.jpg\";\n\n  // };\n\n  return (\n    <div className=\"book-card\" id={id}>\n      <img\n        src={thumbnailSrc}\n        alt={title}\n        onClick={() => navigate(`/bookdetails/${id}`)}\n      />\n      <h3>{title}</h3>\n      <p>Author: {authors}</p>\n      <p>Publisher: {publisher}</p>\n\n    </div>\n  );\n};\n\nexport default Bookcard;\n","// front-end booklist.js\n\nimport React, { useState, useEffect } from \"react\";\nimport { useAppContext } from \"./appContext\";\nimport Bookcard from \"./Bookcard\";\n\nconst Booklist = ({ books }) => {\n  console.log(\"Books in Booklist:\", books);\n  \n  \n  // console.log(books);\n  const { favorites, addToFavorites, removeFromFavorites } = useAppContext();\n\n\n  const [heartStates, setHeartStates] = useState (false); \n  const [favorited, setFavorited] = useState([]);\n\n\n  // useEffect(() => {\n  //   localStorage.setItem(\"favs\", JSON.stringify(heartStates));\n  // }, [heartStates]);\n\n  \n\n  useEffect(() => {\n    const fetchFavorited = async () => {\n      try {\n        const response = await fetch(\"http://localhost:3001/displayfavorites\", {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          credentials: \"include\",\n        });\n  \n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        \n  \n        const data = await response.json();\n        console.log(\"data\", data);\n        setFavorited(data.favorites.map((favorite)=> (favorite.book_id) ) );\n        \n        console.log(\"favs\",data.favorites);\n      } catch (error) {\n        console.error(`Error! ${error}`);\n      }\n    };\n  \n    fetchFavorited();\n  }, []);\n  \n\n\n  const toggleHeartClass = async (id) => {\n    const isFavorite = !heartStates[id]; // Calculate new favorite state\n    setHeartStates({ ...heartStates, [id]: isFavorite }); // Update single state entry\n\n    const userId=localStorage.getItem('userId');\n    try {\n      const response = await fetch(\"http://localhost:3001/favorites\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        credentials: \"include\",\n        body: JSON.stringify({ bookId: id, isFavorite:isFavorite})\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      console.log(\"data\",data);\n\n      // Update local favorites state based on server response\n      // (assuming server is authoritative)\n    } catch (error) {\n      console.error(\"Error toggling favorite:\", error);\n      // Revert local state change if API call fails\n      setHeartStates({ ...heartStates, [id]: !isFavorite }); // Undo state update\n    }\n  };\n\n  return (\n    <div className=\"list\">\n      {books.books.map((book, i)=> (\n        <div key={i}>\n          <Bookcard book={book} />\n          {/* send to the backdend heartStates[book.id] to see if it's a favorite.*/}  \n\n          <span\n            id={heartStates[book.id] || (favorited.includes(book.id))  ? \"like\" : \"unlike\"}\n            className={heartStates[book.id] || (favorited.includes(book.id)) ? \"bi bi-heart-fill\" : \"bi bi-heart\"}\n            onClick={() => toggleHeartClass(book.id)}\n          ></span>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Booklist;\n","// Books\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport Search from \"./Search\";\nimport Booklist from \"./Booklist\";\nimport Axios from \"axios\";\nimport \"./Spinner.css\";\nimport Message from \"./Message\";\n\nconst Books = () => {\n  const [books, setBooks] = useState([]);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [sort, setSort] = useState(\"none\");\n\n  // const [heartStates, setHeartStates] = useState ({});\n  \n   // Initial sort option\n\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Simulate an asynchronous operation\n        await new Promise(resolve => setTimeout(resolve, 2000));\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    console.log(\"Books after setting state:\", books);\n  }, [books]);\n\n  // const [heartStates, setHeartStates] = useState ({});\n  const saveToLocalStorage = (heartStates) => {\n    // localStorage.setItem(\"favs\", JSON.stringify(heartStates));\n    localStorage.getItem(\"favs\");\n  };\n  // useEffect(() => {\n  //   localStorage.setItem(\"favs\", JSON.stringify(heartStates));\n  // }, [heartStates]);\n  \n  // // Load initial favorite states from localStorage\n  // useEffect(() => {\n  //   const savedStates = localStorage.getItem(\"favs\");\n  //   if (savedStates) {\n  //     setHeartStates(JSON.parse(savedStates));\n  //   }\n  // }, []);\n\n  const searchBook = useCallback(\n    async (e) => {\n      setIsLoading(true);\n      e.preventDefault();\n      saveToLocalStorage();\n      // don't empty local storage\n      // localStorage.getItem(\"favs\");\n  \n      try {\n        const response = await fetch(`https://www.googleapis.com/books/v1/volumes?q=${searchValue}&maxResults=40`);\n  \n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n  \n        const data = await response.json();\n        const items = data.items;\n  \n        if (Array.isArray(items)) {\n          setBooks(items);\n          console.log(\"Books after setting state:\", items);\n        } else {\n          setBooks([]);\n          console.log(\"Books after setting state: []\");\n        }\n  \n        setIsLoading(false);\n      } catch (error) {\n        console.error(error);\n        setIsLoading(false);\n      }\n    },\n    [searchValue, isLoading]\n  );\n\n\n \n\n  \n  const handleSearch = (e) => {\n    setSearchValue(e.target.value);\n  };\n\n  const handleSort = (e) => {\n    setSort(e.target.value);\n  };\n\n  const cleanData = (data) => {\n    return data.map((book) => {\n      if (!book.volumeInfo.hasOwnProperty(\"publishedDate\")) {\n        book.volumeInfo.publishedDate = \"0000\";\n      }\n      if (!book.volumeInfo.hasOwnProperty(\"imageLinks\")) {\n        book.volumeInfo[\"imageLinks\"] = {\n          thumbnail: \"https://vignette.wikia.nocookie.net/pandorahearts/\",\n        };\n      }\n      return book;\n    });\n  };\n\n  const sortedBooks = useCallback(() => {\n    // Sort books based on selected sort option\n    if (sort === \"Newest\") {\n      return books.sort((a, b) => {\n        return parseInt(b.volumeInfo.publishedDate.substring(0, 4)) - parseInt(a.volumeInfo.publishedDate.substring(0, 4));\n      });\n    } else if (sort === \"Oldest\") {\n      return books.sort((a, b) => {\n        return parseInt(a.volumeInfo.publishedDate.substring(0, 4)) - parseInt(b.volumeInfo.publishedDate.substring(0, 4));\n      });\n    } else {\n      // No sorting, return original array\n      return books;\n    }\n  }, [books, sort]);\n\n  return (\n    <div>\n      <Search search={searchBook} handleSearch={handleSearch} handleSort={handleSort} sort={sort} />\n      <div>\n        {isLoading ? (\n          <div className=\"spinner-container\">\n            <div className=\"spinner\"></div>\n          </div>\n        ) : books.length > 0 ? (\n          <Booklist books={{books}} /> // Use sortedBooks function for sorting\n        ) : (\n          <div className=\"no-results\">\n         \n         </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Books;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFacebook, faTwitter, faLinkedin, faInstagram } from '@fortawesome/free-brands-svg-icons';\n\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n    <p>Right book for you</p>\n    <ul>\n      <li>\n        <a href=\"/\">\n        <i class=\"bi bi-facebook\"></i>\n        </a>\n      </li>\n      <li>\n        <a href=\"/\">\n        <i class=\"bi bi-twitter\"></i>\n        </a>\n      </li>\n      <li>\n        <a href=\"/\">\n          <i className=\"bi bi-linkedin\"></i>\n        </a>\n      </li>\n      <li>\n        <a href=\"#\">\n          <i className=\"bi bi-instagram\"></i>\n        </a>\n      </li>\n    </ul>\n  </footer>\n);\n};\n\nexport default Footer;\n","// Home.js\n\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"./Header\";\nimport Books from \"./Books\";\nimport Axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport Footer from \"./footer\";\n\nfunction Home() {\n    const [name, setName] = useState(\"\");\n    // const[password, setPassword]=useState('');\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        Axios.get(`http://localhost:3001`)\n            .then(response => {\n                console.log(response.data)\n                if (response.data.valid) {\n                    \n                    setName(response.data.username);\n                    console.log(name)\n                    // setPassword(response.data.password);\n\n                    \n                } else {\n                    navigate('/signup');\n                }\n            }) \n            .catch(err => console.log(err));\n    }, []); // Empty dependency array ensures the effect runs only once on mount\n\n    return (\n        <div>\n            <Header />\n            <h2 className=\"greet\">hey  there, {name}!</h2>\n            {/* <h2 className=\"greet\">hey  there, {password}!</h2> */}\n            <p className=\"greet\"> Welcome to our book library.</p>\n            <Books />\n            <Footer/>\n        </div>\n    );\n}\n\nexport default Home;\n","import \"./login.css\";\nimport React, { useState } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavbarText,\n} from 'reactstrap';\n\n\nfunction Example(args) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [isShowAboutInfo, setIsShowAboutInfo] = useState(false); // State for showing info\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  const handleAboutClick = () => {\n    setIsShowAboutInfo(!isShowAboutInfo); // Toggle info display on click\n  };\n\n\n    return (\n      <div>\n        <Navbar {...args}>\n          <NavbarBrand href=\"/\">Right book 4</NavbarBrand>\n          <NavbarToggler onClick={toggle} />\n          <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"me-auto\" navbar>\n            <NavItem>\n            <NavLink onClick={handleAboutClick}>\n                About us\n              </NavLink>\n              {isShowAboutInfo && ( // Conditionally render info\n                <div className=\"about-info\">\n                  {/* Place your \"About us\" information here */}\n                  <p className=\"blabla\">Welcome to right book 4 you, your one-stop shop for all things books!We're passionate about the power of storytelling and the joy of finding the perfect book for every reader.</p>\n                  <p>Mission:Here at right book for you, we believe that everyone deserves to experience the magic of books. We strive to make book discovery, ordering, and reviewing a seamless and enjoyable experience for users of all ages and interests.</p>\n                  <p>How we do?</p>\n                    <ul>\n                    <li>Extensive Book Database: We offer a comprehensive database of books, encompassing various genres, authors, and publication dates.</li>\n                    <li>User-Friendly Search: Our intuitive search tools help you find your next favorite read by filtering by genre, author, title, and other criteria.</li>\n                    <li>Streamlined Ordering: Enjoy a hassle-free ordering process, allowing you to purchase books directly through our platform.</li>\n                    <li>Engaging Review System: Share your thoughts and experiences with other readers through our user-friendly review system.</li>\n                    </ul>\n                </div>\n              )}\n              </NavItem>\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret>\n                 our book categories\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem>phylosophy</DropdownItem>\n                  <DropdownItem>History</DropdownItem>\n                  <DropdownItem>Geography</DropdownItem>\n                  <DropdownItem>biology</DropdownItem>\n                  <DropdownItem>religion</DropdownItem>\n                  <DropdownItem>sports</DropdownItem>\n                  <DropdownItem>movies</DropdownItem>\n                  <DropdownItem>Business</DropdownItem>\n                  <DropdownItem divider />\n                  <DropdownItem>Reset</DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Nav>\n            <NavbarText>Simple Text</NavbarText> \n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n  \n  export default Example;","import React from \"react\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\n// import NavBar from \"./NavBar\";\nimport Example from \"./LogsignNav\";\n\n\nconst LogsignHeader = () => {\n  return (\n    <div >\n    <header>\n      \n      <h1>\n        {\" \"}\n        Right book 4 you <i class=\"bi bi-journal-bookmark-fill\"></i>\n        <i class=\"bi bi-journal-richtext\"></i>\n      </h1>\n      {/* <LogsignNavbar/> */}\n    </header>\n    <Example />\n    {/* <Home /> */}\n    </div>\n  );\n};\nexport default LogsignHeader;\n","import Axios from 'axios';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport \"./login.css\";\nimport LogsignHeader from './LogsignHeader';\n\nfunction SignupForm() {\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({ username: '', password: '' });\n  const [signupStatus, setSignupStatus] = useState('');\n  const [isInvalid, setIsInvalid] = useState(false);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setFormData(data => ({ ...data, [name]: value }));\n    setIsInvalid(value === '');\n  }\n\n  const handleSignup = async (e) => {\n    e.preventDefault();\n\n    if (isInvalid) {\n      // Display feedback when input fields are blank\n      setSignupStatus('Fields cannot be blank.');\n      return;\n    }\n\n    try {\n      const response = await Axios.post('http://localhost:3001/signup', formData);\n      console.log(response);\n      if (response.data.message) {\n        // send a feedback to the user to let him know he successfully signed up\n        alert(`Signup successful! You can now login ${formData.username}.`);\n        setFormData({ username: '', password: '' });\n        navigate('/login');\n      } else {\n        setSignupStatus('Failed to sign up.');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div className=\"bigcontainer\">\n      <LogsignHeader />\n      <div className=\"form-container\">\n        <form className=\"form\" onSubmit={handleSignup}>\n          <h2 className=\"form-header\">Signup</h2>\n          <div className=\"error-message\">{signupStatus}</div>\n          <div className=\"form-group\">\n            <label className=\"form-label\">Username:</label>\n            <input\n              className=\"form-input\"\n              type=\"text\"\n              name=\"username\"\n              value={formData.username}\n              autoComplete=\"on\"\n              onChange={handleChange}\n            />\n          </div>\n          {isInvalid && <div className=\"invalid-feedback\">Username cannot be blank☹️.\n</div>}\n          <div className=\"form-group\">\n            <label className=\"form-label\">Password:</label>\n            <input\n              className=\"form-input\"\n              type=\"password\"\n              name=\"password\"\n              value={formData.password}\n              autoComplete=\"on\"\n              onChange={handleChange}\n            />\n          </div>\n          {isInvalid && <div className=\"invalid-feedback \">Password cannot be blank☹️.</div>}\n          <button className=\"form-button\" type=\"submit\">\n            Signup\n          </button>\n        </form>\n        <p>Already a user? <Link to=\"/login\">Login</Link></p>\n      </div>\n    </div>\n  );\n}\n\nexport default SignupForm;\n","import Axios from 'axios';\nimport React, { useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport {useEffect} from  'react'\nimport \"./login.css\";\nimport LogsignHeader from './LogsignHeader';\n\n\nAxios.defaults.withCredentials=true;\n\nfunction LoginForm() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loginError, setLoginError] = useState(null);\n  const navigate = useNavigate()\n  const handleLogin = async (e) => {\n    e.preventDefault();\n\n    try {\n      const response = await Axios.post(\"http://localhost:3001/login\", {\n        username: username,\n        password: password\n      });\n\n      // Check the response for successful login (customize according to your API)\n      if (response.data.success) {\n        localStorage.setItem('userId', response.data.user.id);\n        console.log(\"response\",response);\n        // Handle successful login, e.g., redirect to another page\n        console.log('Login successful');\n        navigate(\"/\")\n        \n      } else {\n        // Handle unsuccessful login\n        setLoginError('Invalid useridname or password');\n      }\n    } catch (error) {\n      console.error(error);\n      setLoginError('Internal server error. Please try again later.');\n    }\n  };\n\n  useEffect(()=>{\n    Axios.get(\"http://localhost:3001/login\").then ((response)=>{\n      console.log(response)\n  })\n  },[])\n\n\n  return (\n    <div className=\"bigcontainer\">\n    <div>\n    <LogsignHeader />\n    <div className=\"form-container\">\n    <form className=\"form\" onSubmit={handleLogin}>\n    <h2 className=\"form-header\">Login</h2>\n    {loginError && <p className=\"error-message\">{loginError}</p>}\n    <div className=\"form-group\">\n      <label className=\"form-label\">Username:</label>\n      <input\n        className=\"form-input\"\n        type=\"text\"\n        value={username}\n        autoComplete=\"on\"\n        onChange={(e) => setUsername(e.target.value)}\n      />\n    </div>\n    <div className=\"form-group\">\n      <label className=\"form-label\">Password:</label>\n      <input\n        className=\"form-input\"\n        type=\"password\"\n        value={password}\n        autoComplete=\"on\"\n        onChange={(e) => setPassword(e.target.value)}\n      />\n    </div>\n    <button className=\"form-button\" type=\"submit\">\n      Login\n    </button>\n  </form>\n</div>\n</div>\n<h1>people like book app</h1>\n</div>\n  );\n}\n \nexport default LoginForm;\n","import React, { useState, useEffect } from \"react\";\nimport Bookcard from \"./Bookcard\";\nimport BookDetails from \"./BookDetails\";\nimport Axios from \"axios\";\n\n\n\nconst FavoriteBookCard = ({ id }) => {\n  const [book, setBook] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetch(`https://www.googleapis.com/books/v1/volumes/${id}`)\n      .then((res) => res.json())\n      .then((res) => {   \n        setBook(res);\n        setIsLoading(false);\n        console.log(res.data);\n      })\n      .catch((err) => console.log(err));\n  }, [id]); // Run this effect only once when the component mounts\n\n  return (\n    <div>\n      {isLoading ? (\n        <div className=\"spinner-container\">\n          <div className=\"spinner\"></div>\n        </div>\n      ) : (\n        <Bookcard book={book}/>\n      )}\n    </div>\n  );\n};\n\nexport default FavoriteBookCard;\n","import React, { useState, useEffect } from \"react\";\nimport FavoriteBookCard from \"./FavoriteBookCard\";\n// import axios from axios;\n\nconst Favorites = () => {\n  const [favorites, setFavorites] = useState([]);\n\n  useEffect(() => {\n    const fetchFavorites = async () => {\n      try {\n        const response = await fetch(\"http://localhost:3001/displayfavorites\", {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          credentials: \"include\",\n        });\n  \n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        \n  \n        const data = await response.json();\n        console.log(\"data\", data);\n        setFavorites(data.favorites);\n        console.log(\"favs\", favorites);\n      } catch (error) {\n        console.error(`Error! ${error}`);\n      }\n    };\n  \n    fetchFavorites();\n  }, []);\n  \n  return (\n    <div>\n      <h2>Favorite Books</h2>\n      <ul>\n        {favorites && favorites.length > 0 ? (\n          favorites.map((favorite) => (\n            <FavoriteBookCard id={favorite.book_id} key={favorite.id} />\n          ))\n        ) : (\n          <p>No favorite books available.</p>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Favorites;\n","import React, { useState, useEffect } from \"react\";\nimport Bookcard from \"./Bookcard\";\nimport BookDetails from \"./BookDetails\";\nimport Axios from \"axios\";\n\n\nconst MostLikedCard = ({ id }) => {\n  const [book, setBook] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetch(`https://www.googleapis.com/books/v1/volumes/${id}`)\n      .then((res) => res.json())\n      .then((res) => {   \n        setBook(res);\n        setIsLoading(false);\n        console.log(res.data);\n      })\n      .catch((err) => console.log(err));\n  }, [id]); // Run this effect only once when the component mounts\n\n  return (\n    <div>\n      {isLoading ? (\n        <div className=\"spinner-container\">\n          <div className=\"spinner\"></div>\n        </div>\n      ) : (\n        <Bookcard book={book}/>\n      )}\n    </div>\n  );\n};\n\nexport default MostLikedCard\n","import React, { useState, useEffect } from \"react\";\nimport MostLikedCard from \"./MostLikedCard\";\n// import axios from axios;\n\n\n// const getData=()=>{\n//   const savedStates = localStorage.getItem(\"mstliked\");\n//   if (savedStates) {\n//     return JSON.parse(savedStates);\n//   }else{\n//     return  [];\n//   }\n// }\n\n\n\nconst MostLiked = () => {\n  const [mostLiked, setMostLiked] = useState([]);\n\n\n  // Use a centralized state management solution like Redux for more complex applications\n  // Efficiently store heart states for all books\n\n\n  // useEffect(() => {\n  //   localStorage.setItem(\"mstliked\", JSON.stringify(mostLiked));\n  // }, [mostLiked]);\n  \n\n  useEffect(() => {\n    const fetchMostFavorites = async () => {\n      try {\n        const response = await fetch(\"http://localhost:3001/likedBooks\", {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          credentials: \"include\",\n        });\n  \n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n\n        }\n        \n  \n        const data = await response.json();\n        console.log(\"data\", data);\n        setMostLiked(data.books);\n        console.log(\"mostLiked\",mostLiked);\n      } catch (error) {\n        console.error(`Error! ${error}`);\n      }\n    };\n  \n    fetchMostFavorites();\n  }, []);\n  \n  return (\n    <div>\n      <h2>Favorite Books</h2>\n      <ul>\n        {mostLiked && mostLiked.length > 0 ? (\n          mostLiked.map((liked) => (\n            <MostLikedCard id={liked} key={liked} />\n          ))\n        ) : (\n          <p>Most liked books not available yet.</p>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default MostLiked;\n","import React from 'react';\n\n\nconst Logout = () => {\n    const handleLogout = async () => {\n      try {\n      \n        // Make a request to the server to clear the session\n        const response = await fetch(\"http://localhost:3001/logout\", {\n          method: 'POST',\n          credentials: 'include', \n        });\n  \n        if (response.ok) {\n          // Redirect to the login page or perform any other actions after successful logout\n          window.location.href = '/login';\n        } else {\n          // Handle error (e.g., show an error message)\n          console.error('Logout failed');\n        }\n      } catch (error) {\n        console.error('Error during logout:', error);\n      }\n    };\n  \n    return (\n        <h1>\n            you are about to quit , click here to confirm<button onClick={handleLogout} >Log out</button>\n        </h1>\n\n    );\n  };\n  \n  export default Logout;","// NotFound.js\n\nimport React from 'react';\nimport './Notfound.css'; // Import your CSS file for styling\n\nconst NotFound = () => {\n  return (\n    <div className=\"not-found-container\">\n      <div className=\"not-found-content\">\n        <h1>404</h1>\n        <p>Oops! Page not found</p>\n        <p>Looks like you're lost in the vastness of the internet.</p>\n        {/* <img\n          src=\"https://www.shutterstock.com/image-vector/404-error-page-explorer-man-260nw-2161180329.jpg\" // Replace with your custom image URL\n          alt=\"Lost astronaut\"\n        /> */}\n        <p>Let's get you back on track!</p>\n      </div>\n    </div>\n  );\n};\n\nexport default NotFound;\n","// UpdateProfileForm component \n\nimport Axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport \"./login.css\";\nimport LogsignHeader from './LogsignHeader';\n\nfunction UpdateProfileForm() {\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [updateStatus, setUpdateStatus] = useState('');\n\nconst handleUpdateProfile = async (e) => {\n    e.preventDefault();\n  \n    try {\n      const response = await Axios.put('http://localhost:3001/update-profile', {\n        username: username, \n        password: password\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        withCredentials: true\n      });\n  \n      if (response.data.message) {\n        setUpdateStatus('Profile updated successfully.');\n      } else {\n        setUpdateStatus('Failed to update profile.');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n\n\n\n\n\n  \n\n  return (\n    <div className=\"bigcontainer\">\n      <LogsignHeader />\n      <div className=\"form-container\">\n        <form className=\"form\" onSubmit={handleUpdateProfile}>\n          <h2 className=\"form-header\">Update Profile</h2>\n          <div className=\"error-message\">{updateStatus}</div>\n          <div className=\"form-group\">\n            <label className=\"form-label\">Username:</label>\n            <input\n              className=\"form-input\"\n              type=\"text\"\n              value={username}\n              autoComplete=\"on\"\n              onChange={(e) => setUsername(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label className=\"form-label\">Password:</label>\n            <input\n              className=\"form-input\"\n              type=\"password\"\n              value={password}\n              autoComplete=\"on\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </div>\n          <button className=\"form-button\" type=\"submit\">\n            Update Profile\n          </button>\n        </form>\n        <p>Back to <Link to=\"/\">Home</Link></p>\n      </div>\n    </div>\n  );\n}\n\nexport default UpdateProfileForm;\n","// App.js\nimport React from \"react\";\nimport \"./App.css\";\nimport {  Route,Routes } from 'react-router';\nimport { BrowserRouter } from \"react-router-dom\";\nimport BookDetails from \"./BookDetails\";\nimport Home from \"./Home\";\nimport SignupForm from \"./SignupForm\";\nimport LoginForm from './LoginForm'\nimport Favorites from \"./Favorites\";\nimport AppContextProvider from \"./appContext\";\nimport MostLiked from \"./MostLiked\";\nimport Logout from \"./Logout\";\nimport NotFound from \"./Notfound\";\nimport UpdateProfileForm from \"./UpdateProfile\";\n\n\nconst App = () => {\n\n  return (\n    <div className=\"App\">\n\n        <BrowserRouter>\n        <Routes>\n        <Route exact path = \"/bookdetails/:id\" element={<BookDetails/>} />\n    \n\n        <Route exact path = \"/\" element={<Home/>} />\n\n        <Route exact path = \"/signup\" element={<SignupForm/>} />\n\n\n        <Route exact path = \"/login\" element={<LoginForm/>} />\n\n\n        <Route exact path = \"/favorites\" element={<Favorites/>} />\n\n\n        <Route exact path = \"/likedbooks\" element={<MostLiked/>} />\n\n\n        <Route exact path = \"/logout\" element={<Logout/>} />\n\n        <Route exact path = \"/Profile\" element={<UpdateProfileForm/>} />\n\n        <Route exact path = \"*\" element={<NotFound/>} />\n        </Routes>\n        </BrowserRouter>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport AppContextProvider from './appContext';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <AppContextProvider>\n    <App />\n    </AppContextProvider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}